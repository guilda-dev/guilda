各フォルダの概要 

==============================================================
_version_suppoert : 旧verのGUILDAの関数名と現行verの関数名を対応付け
==============================================================




=========================================
@power_network : 電力ネットワーククラスの定義
=========================================
・(method)
・(method)
・(method)
・(method)
=========================================




=========================================
@branch : 全ての送電線クラスの基底クラス
=========================================
・
=========================================




=========================================
@bus : 全ての母線クラスの基底クラス
=========================================
・
=========================================




=========================================
@component : 全ての機器クラスの基底クラス
=========================================
・
=========================================




=========================================
@controller : 全ての母線クラスの基底クラス
=========================================
・
=========================================




=====================================================================================
+base_class/ : 各種機能を持ったベースクラス。これらのクラスを継承させて機器や制御機モデルを定義する
=====================================================================================
・Edit_Monitoring.m          : プロパティの変更などを管理するためのメソッドを備えたクラス
    継承先
    >> ・HasGridCode.m       : simulation中の並解列を決める判定式(グリッドコード)を管理するメソッドを備えたクラス
        継承先
        >> ・branch.m        : [送電線]
        >> ・component.m     : [機器]
        >> ・controller.m    : [制御機]
    >> ・bus.m               : [母線]
・handleCopyable.m           : handleクラスの複製に必要なメソッドを備えたクラス
    継承先
    >> ・HasCostFunction.m   : コスト関数を管理するメソッドを備えたクラス
        継承先
        >> ・branch.m        : [送電線]
        >> ・bus.m           : [母線]
        >> ・component.m     : [機器]
        >> ・controller.m    : [制御機]
    >> ・HasGridCode.m       : （上述）
    >> ・HasStateInput.m     : 状態と入力を持つクラスの状態名やポート名を管理するメソッドを備えたクラス。
        継承先
        >> ・component.m     : [機器]
        >> ・controller.m    : [制御機]
=====================================================================================




==============================================
+supporters/ : GUILDA上の機能を担う各種クラスを格納
==============================================
詳しくは +supporters/readme.txtを参照
・+for_graph     : ネットワークのグラフ構造をプロットするためのクラス/関数を保存
・+for_netinfo   : ネットワークのパラーメータやクラス名等を整理して出力するためのクラス/関数を保存
・+for_simulate  : net.simulate内部で使用されるクラス類を保存
・+for_GUI       : （整備予定）
・+for_user      : GUI関連のクラスを保存
==============================================




===================================================================
+tools/ : GUILDAのシステム内で頻繁に行われる処理を関数として定義したファイル
===================================================================
・
===================================================================




==============================
image/ : UI上で使用する画像を保存
==============================
・GraphStyle1.png        : SimulationResultクラスのUI関連で使用
・GraphStyle2.png        : SimulationResultクラスのUI関連で使用
・GraphStyle3.png        : SimulationResultクラスのUI関連で使用
・GUILDAicon.png         : いくつかのUI関連で使用
・sample_graphplot.png   : net.GUIで使用予定
・sample_plot.png        : net.GUIで使用予定
==============================